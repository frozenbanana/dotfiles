# Fig Tmux Integration: Enabled
source-file ~/.fig/tmux
# End of Fig Tmux Integration

# Make sure tmux is using zsh
set-option -g default-shell /bin/zsh

# Set prefix to Ctrl-a instead of Ctrl-b
unbind C-b
set-option -g prefix C-space
bind-key C-space send-prefix

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi

# use vim-like keys for splits and windows
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# open pane in same directory
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# vim-like navigation
#bind-key -n C-w if-shell "$is_vim" "send-keys C-w" "switch-client -Ttable1"
#bind-key -Ttable1 'h' select-pane -L
#bind-key -r -Ttable1 'C-h' resize-pane -L
#bind-key -Ttable1 'j' select-pane -D
#bind-key -r -Ttable1 'C-j' resize-pane -D
#bind-key -Ttable1 'k' select-pane -U
#bind-key -r -Ttable1 'C-k' resize-pane -U
#bind-key -Ttable1 'l' select-pane -R
#bind-key -r -Ttable1 'C-l' resize-pane -R
#bind-key -Ttable1 '\' select-pane -l
#bind-key -Ttable1 's' split-window -v
#bind-key -Ttable1 'v' split-window -h
#bind-key -Ttable1 'C-w' send-keys C-w


bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
set-window-option -g display-panes-time 1500
set-window-option -g window-status-current-style fg=magenta

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

######## TPM ######################
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect' # Save sessions to be able to restore
set -g @plugin 'tmux-plugins/tmux-continuum' # Automatically save session states
set -g @plugin 'dracula/tmux'  

## Session resurrect config
set -g @resurrect-strategy-nvim 'session' # Save sessions inside nvim TODO: Set up vim-obsession on nvim land
set -g @resurrect-capture-pane-contents 'on' # Save pane content
set -g @continuum-restore 'on' # Use auto save for states

## Dracula theme config
set -g @dracula-show-left-icon session # See session name
set -g @dracula-cpu-usage true
set -g @dracula-ram-usage true
set -g @dracula-gpu-usage false
set -g @dracula-show-fahrenheit false

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
